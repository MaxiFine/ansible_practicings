ANSIBLE_HOST_KEY_CHECKING=False ansible all -m ping  # disabling key checking

# Executing commands on connected host together
Syntax -
ansible [group] -m shell -a [command]
ansible dev_hosts -m shell -a "free -m"

ansible all -m shell -a "apt list --installed"

ansible-doc -l | wc -l {coount the number of mudules}
ansible-doc -l >> ansible_modules.txt

cat ansible_modules.txt | grep aws

#
User can copy the Files on Ansible Clients from Ansible Controller.
âž¢ Syntax -
ansible [group] -m copy -a [src=sorce_path dest=destination_path]

ansible backend -m copy -a "src=/mnt/c/Users/MaxwellAdomako/ansible/project-1/notes.txt dest=/tmp"


# COPYING SOME CONTENT IF REQUIRED
ansible backend -m copy -a "content='THIS IS THE TEST CONTENT USING ANSIBLE' dest=/tmp/tmp.txt"


# MANAGING FILES/DIRS ON ANSIBLE Clients
ansible backend -m file -a "dest=/tmp/temp_test state=touch"
DELETING THE CREATED FILES
ansible backend -m file -a "dest=/tmp/temp_test state=absent"
# Execute WITH permission
ansible backend -m file -a "dest=/tmp/temp_test.py state=touch mode=0775"

Creating a Directory
ansible backend -m file -a "dest=/tmp/temp/max_test state=directory"
ansible backend -m file -a "dest=/tmp/temp/max_test state=absent"

INSTALLING PACKAGES ON Clients
ansible backend -m  shell -a "sudo apt-get install | grep nginx"

checking if package is installed
ansible backend -m apt -a "name=nginx state=present"
ansible backend -m apt -a "name=nginx state=present" -b # to add sudo privilleges
ansible backend -m apt -a "name=nginx state=latest" -b # to update a package
ansible backend -m apt -a "name=apache2 state=present" -b
ansible backend -m apt -a "name=nginx state=present" -b

SETUP MODULE
ansible backend -m setup -a "filter=ansible_lsb"

WORKING WITH DYNAMIC inventory[types=static::dynamic*]
An inventory is a collection of host

DYNAMIC inventory is dynamically generating the hosts ips
after adding to cfg file
# DYNAMIC CONFIGS
[inventory]
enable_plugins = host_list, script, auto, yaml, ini, toml, redis, zookeeper, host_list, yaml, ini, toml, redis, zookeeper

sudo pip3 install boto3

configure aws Credentials
export the Credentials

create yml file and add the aws plugin

enter command
ansible-inventory -i demo_aws_ec2.yml --graph
ansible-inventory -i demo_aws_ec2.yml --list

ansible backend -i demo_aws_ec2.yml -u ubuntu -m ping


Dir warnings command
chmod -R o-w /mnt/c/Users/MaxwellAdomako/ansible/project-1
